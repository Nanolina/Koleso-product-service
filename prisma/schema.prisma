generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            String       @id @default(uuid())
  name          String
  description   String?
  brand         String?
  model         String?
  gender        GenderType?
  sectionId     Int
  categoryId    Int?
  subcategoryId Int?
  composition   Json?
  storeId       String
  userId        String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @default(now())
  category      Category?    @relation(fields: [categoryId], references: [id])
  section       Section      @relation(fields: [sectionId], references: [id])
  store         Store        @relation(fields: [storeId], references: [id])
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
  variants      Variant[]
}

model Variant {
  id                   String    @id @default(uuid())
  productId            String
  color                ColorType
  size                 String?   @db.VarChar(20)
  quantity             Int
  priceWithoutDiscount Float
  finalPrice           Float
  articleSupplier      String?
  articleKoleso        String
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  images               Image[]
  product              Product   @relation(fields: [productId], references: [id])

  @@unique([productId, color, articleKoleso])
}

model Image {
  id        String   @id @default(uuid())
  url       String
  publicId  String?
  variantId String?
  storeId   String?  @unique
  store     Store?   @relation(fields: [storeId], references: [id], onDelete: Cascade)
  variant   Variant? @relation(fields: [variantId], references: [id], onDelete: Cascade)
}

model Section {
  id         Int        @id @default(autoincrement())
  name       String
  image      String?
  categories Category[]
  products   Product[]
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String
  image         String?
  sectionId     Int
  section       Section       @relation(fields: [sectionId], references: [id])
  products      Product[]
  subcategories Subcategory[]
}

model Subcategory {
  id         Int       @id @default(autoincrement())
  name       String
  image      String?
  categoryId Int
  products   Product[]
  category   Category  @relation(fields: [categoryId], references: [id])
}

model Store {
  id          String    @id @default(uuid())
  name        String    @db.VarChar(255)
  description String?
  userId      String
  image       Image?
  products    Product[]
}

enum GenderType {
  Male
  Female
}

enum ColorType {
  Aquamarine
  Beige
  Black
  Blue
  Brown
  Cherry
  Cream
  Emerald
  Fuchsia
  Golden
  Green
  Grey
  LightBlue
  Lilac
  Maroon
  Olive
  Orange
  Pink
  Purple
  Raspberry
  Red
  Sandy
  Silver
  Turquoise
  Violet
  White
  Yellow
}
